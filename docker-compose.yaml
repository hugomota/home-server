services:
  traefik:
    image: traefik:latest
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.dashboard.service=api@internal
      - traefik.http.routers.dashboard.entrypoints=web
      - traefik.http.routers.dashboard.middlewares=auth
      - traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_AUTH}
    networks:
      - traefik_net
    restart: unless-stopped

  actual-budget:
    image: actualbudget/actual-server:latest
    container_name: actual-budget
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DATA_ROOT}/actual-budget:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.actual-budget.rule=Host(`budget.${DOMAIN}`)
      - traefik.http.routers.actual-budget.entrypoints=web
      - traefik.http.services.actual-budget.loadbalancer.server.port=5006
    networks:
      - traefik_net
    restart: unless-stopped

networks:
  traefik_net:
    driver: bridge
